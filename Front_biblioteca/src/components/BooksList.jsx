import { createSignal, onMount } from "solid-js";
import api from "../services/api";
import auth from "../stores/auth";

export default function BooksList() {
  const [libros, setLibros] = createSignal([]);
  const [fechaLimite, setFechaLimite] = createSignal("");

  // Cargar todos los libros al montar
  onMount(async () => {
    try {
      const res = await api.get("/libros/");
      setLibros(res.data);
    } catch (err) {
      console.error("Error cargando libros:", err);
    }
  });

  // Funci√≥n para pedir pr√©stamo
  const pedirPrestamo = async (libroId) => {
    if (!fechaLimite()) {
      alert("Debes seleccionar una fecha l√≠mite ");
      return;
    }
    try {
      await api.post("/prestamos/", {
        usuario: auth.user?.id,  // seg√∫n tu modelo en backend
        libro: libroId,
        fecha_limite: fechaLimite()
      });
      alert(" Pr√©stamo creado con √©xito");
      // recargar lista de libros
      const res = await api.get("/libros/");
      setLibros(res.data);
    } catch (err) {
      console.error("Error creando pr√©stamo:", err);
      alert(" No se pudo crear el pr√©stamo");
    }
  };

  return (
    <div>
      <h2>üìñ Lista de Libros</h2>

      <label>
        Selecciona fecha l√≠mite para el pr√©stamo:{" "}
        <input type="date" value={fechaLimite()} onInput={(e) => setFechaLimite(e.target.value)} />
      </label>

      <ul>
        {libros().map((libro) => (
          <li>
            <strong>{libro.titulo}</strong> ‚Äì {libro.autor}  
            {libro.disponible ? (
              <button onClick={() => pedirPrestamo(libro.id)}> Pedir Pr√©stamo</button>
            ) : (
              <span style={{ color: "red" }}>No disponible</span>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
}
